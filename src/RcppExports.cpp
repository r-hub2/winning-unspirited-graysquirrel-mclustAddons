// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rangeTransform
NumericVector rangeTransform(NumericVector& x, double lbound, double ubound);
RcppExport SEXP _mclustAddons_rangeTransform(SEXP xSEXP, SEXP lboundSEXP, SEXP uboundSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type lbound(lboundSEXP);
    Rcpp::traits::input_parameter< double >::type ubound(uboundSEXP);
    rcpp_result_gen = Rcpp::wrap(rangeTransform(x, lbound, ubound));
    return rcpp_result_gen;
END_RCPP
}
// powerTransform
NumericVector powerTransform(NumericVector& x, double lambda, double eps);
RcppExport SEXP _mclustAddons_powerTransform(SEXP xSEXP, SEXP lambdaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(powerTransform(x, lambda, eps));
    return rcpp_result_gen;
END_RCPP
}
// rangepowerTransformDeriv_lb
NumericVector rangepowerTransformDeriv_lb(NumericVector& x, double lambda, double lbound, double eps);
RcppExport SEXP _mclustAddons_rangepowerTransformDeriv_lb(SEXP xSEXP, SEXP lambdaSEXP, SEXP lboundSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type lbound(lboundSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(rangepowerTransformDeriv_lb(x, lambda, lbound, eps));
    return rcpp_result_gen;
END_RCPP
}
// rangepowerTransformDeriv_lub
NumericVector rangepowerTransformDeriv_lub(NumericVector& x, double lambda, double lbound, double ubound, double eps, double tol);
RcppExport SEXP _mclustAddons_rangepowerTransformDeriv_lub(SEXP xSEXP, SEXP lambdaSEXP, SEXP lboundSEXP, SEXP uboundSEXP, SEXP epsSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type lbound(lboundSEXP);
    Rcpp::traits::input_parameter< double >::type ubound(uboundSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(rangepowerTransformDeriv_lub(x, lambda, lbound, ubound, eps, tol));
    return rcpp_result_gen;
END_RCPP
}
// rangepowerTransformDeriv_unb
NumericVector rangepowerTransformDeriv_unb(NumericVector& x, double lambda);
RcppExport SEXP _mclustAddons_rangepowerTransformDeriv_unb(SEXP xSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(rangepowerTransformDeriv_unb(x, lambda));
    return rcpp_result_gen;
END_RCPP
}
// rowMax
arma::colvec rowMax(arma::mat& X);
RcppExport SEXP _mclustAddons_rowMax(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(rowMax(X));
    return rcpp_result_gen;
END_RCPP
}
// rowSum
arma::colvec rowSum(arma::mat& X);
RcppExport SEXP _mclustAddons_rowSum(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(rowSum(X));
    return rcpp_result_gen;
END_RCPP
}
// colMax
arma::rowvec colMax(arma::mat& X);
RcppExport SEXP _mclustAddons_colMax(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(colMax(X));
    return rcpp_result_gen;
END_RCPP
}
// colSum
arma::rowvec colSum(arma::mat& X);
RcppExport SEXP _mclustAddons_colSum(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(colSum(X));
    return rcpp_result_gen;
END_RCPP
}
// logsumexp_Rcpp
NumericVector logsumexp_Rcpp(arma::mat& x, arma::rowvec& v);
RcppExport SEXP _mclustAddons_logsumexp_Rcpp(SEXP xSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec& >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(logsumexp_Rcpp(x, v));
    return rcpp_result_gen;
END_RCPP
}
// softmax_Rcpp
arma::mat softmax_Rcpp(arma::mat& x, arma::rowvec& v);
RcppExport SEXP _mclustAddons_softmax_Rcpp(SEXP xSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec& >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(softmax_Rcpp(x, v));
    return rcpp_result_gen;
END_RCPP
}
